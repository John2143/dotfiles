# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "vmd" "xhci_pci" "ahci" "nvme" "usbhid" "amdgpu" ];
  boot.supportedFilesystems = [ "ntfs" "vfat" "ext4" ];
  boot.initrd.kernelModules = [
    # "vfio_pci"
    # "vfio"
    # "vfio_iommu_type1"
  ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.kernelParams = [
    # "video=DP-2:2560x1440@240"
    # "video=DP-1:1920x1080@144"
    # "intel_iommu=on"
    # "iommu=pt"
  ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/003de88b-e5fb-4a42-8948-27398ddd94d6";
      fsType = "ext4";
    };

  fileSystems."/mnt/arch" =
    { device = "/dev/disk/by-uuid/b9e9db5f-bbb2-49bd-a77a-891dd347b651";
      fsType = "ext4";
    };

  fileSystems."/mnt/share" =
    { device = "/dev/disk/by-uuid/1940c283-3d7a-4515-86de-9183e017c2f8";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/3CAF-0415";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices =
    [
     # { device = "/dev/disk/by-uuid/b0eb1014-057f-401f-a3cc-f256550eb96d"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  hardware.opengl.extraPackages = with pkgs; [
    rocmPackages.clr.icd
  ];

  hardware.bluetooth.enable = true; # enables support for Bluetooth
  hardware.bluetooth.powerOnBoot = true; # powers up the default Bluetooth controller on boot
}
